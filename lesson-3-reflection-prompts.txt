When would you want to use a remote repository rather than keeping all your work
local?

  When I'm working on different computers (for example, my home and working comp.) 
  or there are several contributors makes changes on my project, remote repository
  using preferred.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

  The cause is the same as for manual commiting: both commiting and pulling must
  reflect specifical logical changes in repository. Futhermore, maybe I'm not
  needed to pull EACH commit one at time. It seems more suitable to do larger piece
  of work on remote, and then pull whole of commits to local computer if needed.

Describe the differences between forks, clones, and branches. When would you
use one instead of another?

  Clone - this is making the one to one copy of repository from GitHub server to local computer, or
  between two GitHub accounts. Fork - this is cloning the repository from one account to another
  account on GitHub servers only. Branch - this is specific sequence of commits in the repository,
  which can be pushed/pulled between local computer and GitHub server one at time.
  So, when I need to copy a repository to my GitHub account from someone's GitHub account, I using
  fork. When on my local computer I want to make the same repository as on GitHub exists, I using
  clone. If I want to experiment with my idea without causing any influence on project's official version,
  I making a branch.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
