How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Viewing of a diff via special utilities marks appropriate lines where difference was detected.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can quickly compare multiple versions, find what was changed in it, and can be able
    to make the redo's, if requred.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pros are: I making one commit per logical change, it's good for navigating changes and compare it
    one with another.
    The cons are: it's easy to forget to make a commit, or make a too big (too small)commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because of VCS's, like Git, well adopted for coding goals, operating with interrelated 
    files, whereas others systems more likely are file storages.

How can you use the commands git log and git diff to view the history of files?

    git log commamd I used for view the set of commits. git diff command was used
    for comparison of two commits, for viewing concrete codelines which was added or
    removed.

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
